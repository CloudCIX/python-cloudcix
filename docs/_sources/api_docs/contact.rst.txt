The Contact Application is a CRM application that exposes a REST API to
manage a shared address book between Users in the same Member

contact can be used as a sales and marketing tool or just as a general
purpose address book.

It is also a management system for the management of your CloudCIX Chatbots

**Basic Usage**: ``cloudcix.api.Contact.<service>.<method>``

Services
--------

Auth
^^^^^^^
This service allows a User to authenticate a Contact in their Member to login to their Chatbots.

**Basic Usage**: ``cloudcix.api.contact.auth.<method>``

Available Methods
    - ``cloudcix.api.contact.auth.create``
        - Returns a 200 if sent email and password are valid, otherwise a 400 status code is returned.

Campaign
^^^^^^^^
This service allows for management of Campaigns

Campaigns are a many to many classification of contact

**Basic Usage**: ``cloudcix.api.contact.campaign.<method>``

Available Methods
    - ``cloudcix.api.contact.campaign.list``
        - Returns a list of all Campaigns associated with the Member of
          the User calling this method
    - ``cloudcix.api.contact.campaign.create``
        - Allows the User to create a new Campaign record
    - ``cloudcix.api.contact.campaign.read``
        - Returns the details of one Campaign, including a list of
          contact belonging to that Campaign
    - ``cloudcix.api.contact.campaign.update``
        - Allows the User to update a Campaign record
    - ``cloudcix.api.contact.campaign.delete``
        - Allows the User to delete one Campaign record, which includes
          the links between the Campaign and any contact.

Campaign Contact
^^^^^^^^^^^^^^^^
This service manages the many to many links between Campaigns and contact

**Basic Usage**: ``cloudcix.api.contact.campaign_contact.<method>``

Available Methods
    - ``cloudcix.api.contact.campaign_contact.create``
        - Allows the User to create a relation between a Campaign and
          a Contact
    - ``cloudcix.api.contact.campaign_contact.update``
        - Allows the User to update the details of a relation between
          a Campaign and a Contact
    - ``cloudcix.api.contact.campaign_contact.delete``
        - Allows the User to delete a relation between a Campaign and a
          Contact

Chatbot
^^^^^^^
This service allows for the management of your Members CloudCIX Chatbots

**Basic Usage**: ``cloudcix.api.contact.chatbot.<method>``

Available Methods
    - ``cloudcix.api.contact.chatbot.list``
        - Returns a list of all Chatbots associated with the Member of
          the User calling the method
    - ``cloudcix.api.contact.chatbot.create``
        - Allows the User to create a new Chatbot record
    - ``cloudcix.api.contact.chatbot.read``
        - Returns the details of a given Chatbot record
    - ``cloudcix.api.contact.chatbot.update``
        - Allows the User to update a Chatbot record

Contact
^^^^^^^
This service allows for management of contact

contact are people that are potential customers

**Basic Usage**: ``cloudcix.api.contact.contact.<method>``

Available Methods
    - ``cloudcix.api.contact.contact.list``
        - Returns a list of all contact associated with the Member of
          the User calling the method
    - ``cloudcix.api.contact.contact.create``
        - Allows the User to create a new Contact record
    - ``cloudcix.api.contact.contact.read``
        - Returns the details of a given Contact record including a
          list of Campaigns and Groups to which that Contact belongs
    - ``cloudcix.api.contact.contact.update``
        - Allows the User to update a Contact record
    - ``cloudcix.api.contact.contact.delete``
        - Allows the User to delete a Contact record, including any
          links between that Contact and any Campaigns or Groups

Conversation
^^^^^^^^^^^^^
This service allows for the review of conversations the User's Member Contacts have 
had with their Chatbot

**Basic Usage**: ``cloudcix.api.contact.conversation.<method>``

Available Methods
    - ``cloudcix.api.contact.conversation.list``
        - Returns a list of all Converstaions that the User's Member's Contact has
          had with their Chatbot
    - ``cloudcix.api.contact.conversation.create``
        - Allows the Chatbot Agent User to create a new Conversation record the Contact
          started with their Chatbot
    - ``cloudcix.api.contact.conversation.read``
        - Returns the details of a given Conversation record

Corpus
^^^^^^^
This service represents a URL pointing to a public resource for a Corpus record in a Chatbot. 

The Corpora of a Chatbot will be be converted to vector embeddings before being used by 
the Chatbot.

The Chatbot will draw information from the Corpora embeddings when generating answers for Contacts.

**Basic Usage**: ``cloudcix.api.contact.corpus.<method>``

Available Methods
    - ``cloudcix.api.contact.corpus.list``
        - Returns a list of all Corpora belonging to a Chatbot in a Users Member.
    - ``cloudcix.api.contact.corpus.create``
        - Allows the User to create a new Corpus record for the specified Chatbot.
    - ``cloudcix.api.contact.corpus.read``
        - Returns a Corpus record with all its details
    - ``cloudcix.api.contact.corpus.update``
        - Allows the User to update the details of a Corpus record
    - ``cloudcix.api.contact.corpus.delete``
        - Allows the User to delete a Corpus record
  
Group
^^^^^
This service allows for management of Groups

Groups are many to many classifications of contact

**Basic Usage**: ``cloudcix.api.contact.group.<method>``

Available Methods
    - ``cloudcix.api.contact.group.list``
        - Returns a list of all Groups belonging to the Member of the
          User calling the method
    - ``cloudcix.api.contact.group.create``
        - Allows the User to create a new Group record
    - ``cloudcix.api.contact.group.read``
        - Returns a Group record with all its details
    - ``cloudcix.api.contact.group.update``
        - Allows the User to update the details of a Group record
    - ``cloudcix.api.contact.group.delete``
        - Allows the User to delete a Group record, including any links
          between that Group and any Contact

Group Contact
^^^^^^^^^^^^^
This service lets a User assign Contacts to any number of Groups

**Basic Usage**: ``cloudcix.api.contact.group_contact.<method>``

Available Methods
    - ``cloudcix.api.contact.group_contact.create``
        - Allows the User to create a relation between a Group and a
          Contact
    - ``cloudcix.api.contact.group_contact.delete``
        - Allows the User to delete a relation between a Group and a
          Contact

Opportunity
^^^^^^^^^^^
This service allows for the management of Opportunity records

Opportunities are the estimated chances of getting into business with one more
contact with its possible marketing value

**Basic Usage**: ``cloudcix.api.contact.opportunity.<method>``

Available Methods
    - ``cloudcix.api.contact.opportunity.list``
        - Return a list of all Opportunity records associated with the
          User calling the method
    - ``cloudcix.api.contact.opportunity.create``
        - Allows the User to create a new Opportunity record
    - ``cloudcix.api.contact.opportunity.read``
        - Returns an Opportunity record along with all its details
    - ``cloudcix.api.contact.opportunity.update``
        - Allows the User to update the details of an Opportunity
          record
    - ``cloudcix.api.contact.opportunity.delete``
        - Allows the User to delete an Opportunity record

Opportunity Contact
^^^^^^^^^^^^^^^^^^^
This service allows Users to manage links between Opportunities and Contacts

There is a many-to-many relation between Opportunities and Contacts

**Basic Usage**: ``cloudcix.api.contact.opportunity_contact.<method>``

Available Methods
    - ``cloudcix.api.contact.opportunity_contact.create``
        - Allows the User to create a relation between an Opportunity
          and a Contact
    - ``cloudcix.api.contact.opportunity_contact.delete``
        - Allows the User to delete a relation between an Opportunity
          and a Contact

Opportunity History
^^^^^^^^^^^^^^^^^^^
This service allows Users to log updates on an Opportunity, as well as sending
emails to the associated contact

**Basic Usage**: ``cloudcix.api.contact.opportunity_history.<method>``

Available Methods
    - ``cloudcix.api.contact.opportunity_history.list``
        - Returns a list of history log entries for an Opportunity
    - ``cloudcix.api.contact.opportunity_history.create``
        - Allows the User to create a new history log for an
          Opportunity

Q and A
^^^^^^^
A q_and_a record contains one question asked by a Contact and the response generated by a Chatbot
as the answer in a Conversation.

An ordered collection of q_and_a records form a Conversation the Contact had with a specific Chatbot.

**Basic Usage**: ``cloudcix.api.contact.q_and_a.<method>``

Available Methods
    - ``cloudcix.api.contact.q_and_a.list``
        - Returns a list of all Question and Answers that a Contact had in the speciified
          Conversation with a Chatbot
    - ``cloudcix.api.contact.q_and_a.create``
        - Allows the Chatbot Agent User to create a new QandA record to record the question asked
          and the answer given, including references if any
    - ``cloudcix.api.contact.q_and_a.read``
        - Returns the details of a given QandA record including the references
