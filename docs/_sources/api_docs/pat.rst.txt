The PAT Application exposes a REST API capable of managing Pod
records

**Basic Usage**: ``cloudcix.api.PAT.<service>.<method>``

Services
--------

Galaxy
^^^^^^^^^^
This services allows for the management of Galaxy records.

A Galaxy represents the PAT properties to support Pods it supports.

**Basic Usage**: ``cloudcix.api.PAT.galaxy.<method>``

Available Methods
    - ``cloudcix.api.PAT.galaxy.create``
        - Create a galaxy. 
    - ``cloudcix.api.PAT.galaxy.read``
        - Returns the selected galaxy.
    - ``cloudcix.api.PAT.galaxy.update``
        - Update the specified galaxy.
 

Main Firewall Rules
^^^^^^^^^^^^^^^^^^^^^
This services allows for the management the Main Firewall Rules for a Pod.


**Basic Usage**: ``cloudcix.api.PAT.main_firewall_rules.<method>``

Available Methods
    - ``cloudcix.api.PAT.main_firewall_rules.create``
        - `pod_id` is required in the method. This represents the POD the rules are for.
        - Sending a List of rules in this request will remove the current rules if they exist and save the rules in the request
    - ``cloudcix.api.PAT.main_firewall_rules.list``
        - Returns the current list of the Main Firewall Rules for the specified `pod_id`


Pod
^^^^^
This services allows for the management of Pod records.

A Pod represents a logical unit of hardware and functionality in a cloud. A Pod is fully defined by a `config.json` file, which can be read using this Pod endpoint.

**Basic Usage**: ``cloudcix.api.PAT.pod.<method>``

Available Methods
    - ``cloudcix.api.PAT.pod.list``
        - Return a list of all pods
    - ``cloudcix.api.PAT.pod.create``
        - Create a Pod.
    - ``cloudcix.api.PAT.pod.read``
        - Returns the selected pod

   