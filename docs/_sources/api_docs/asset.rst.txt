The Asset Application enables the management of Assets owned by a Member.

Examples of Assets are buildings, machinery, furniture, vehicles, etc.

**Basic Usage**: ``cloudcix.api.Asset.<service>.<method>``

Services
--------

Asset
^^^^^
This service handles the Assets of a Member

**Basic Usage**: ``cloudcix.api.Asset.Asset.<method>``

Available Methods
    - ``cloudcix.api.Asset.asset.list``
        - Returns a list of Assets owned by the acting Address of
          the User who makes the request
    - ``cloudcix.api.Asset.asset.create``
        - Allows a User to create a new Asset for its acting Address
    - ``cloudcix.api.Asset.asset.read``
        - Returns a given asset with all its details
    - ``cloudcix.api.Asset.asset.update``
        - Allows a User to update an Asset for its acting Address

Asset Transaction
^^^^^^^^^^^^^^^^^
This service allows the User to create relationships between Assets and
Financial Transactions

An Asset Transaction describes an operation or transaction on an Asset, which
can be a purchase, a sale, or a depreciation

.. seealso:: For a list of supported transactions, please see the Asset Application section
  of the `HTTP API Reference <https://docs.cloudcix.com/>`_

**Basic Usage**: ``cloudcix.api.Asset.asset_transaction.<method>``

Available Methods
    - ``cloudcix.api.Asset.asset_transaction.list``
        - Returns a list of Asset Transactions and their details
    - ``cloudcix.api.Asset.asset_transaction.create``
        - Allows a User to create an association between an Asset and a
          Financial Transaction, or depreciate an Asset, in which case
          no transaction will be specified
    - ``cloudcix.api.Asset.asset_transaction.read``
        - Returns an Asset Transaction with all its details

Depreciation Type
^^^^^^^^^^^^^^^^^
This service allows the User to generate Depreciation Types for their Assets

A Depreciation Type is the percentage of value an Asset will lose for a period
of time expressed in years until a certain date

**Basic Usage**: ``cloudcix.api.Asset.depreciation_type.<method>``

Available Methods
    - ``cloudcix.api.Asset.depreciation_type.list``
        - Returns a list of all Depreciation Types associated with the
          Member of the User making the request
    - ``cloudcix.api.Asset.depreciation_type.create``
        - Allows the User to create a new Depreciation Type
    - ``cloudcix.api.Asset.depreciation_type.read``
        - Returns a given Depreciation Type with all its details
    - ``cloudcix.api.Asset.depreciation_type.update``
        - Allows a User to update a given Depreciation Type
    - ``cloudcix.api.Asset.depreciation_type.delete``
        - Allows a User to delete a Depreciation Type
        - A Depcreciation Type can only be deleted if it is no longer
          associated with any Asset

Off Rent
^^^^^^^^
This service allows the User to manage rentable Assets and return them from
customers

The Asset must be set up as rentable in order to use this method.

The Asset must also be available and already on rent.

Every returned Asset will enter into the "for test" status

**Basic Usage**: ``cloudcix.api.Asset.off_rent.<method>``

Available Methods
    - ``cloudcix.api.Asset.off_rent.list``
        - Returns a list of Off Rent transactions
    - ``cloudcix.api.Asset.off_rent.create``
        - Allows the User to create a record of an Asset being
          returned from a customer.
        - These assets will automatically be entered into the
          "for test" state
    - ``cloudcix.api.Asset.off_rent.read``
        - Allows the User to get details about an Off Rent transaction
    - ``cloudcix.api.Asset.off_rent.update``
        - Allows the User to update some details about an Off Rent
          transaction

Off Test
^^^^^^^^
This service allows the Users to manage their returned rentable Assets and take
them out of the "for test" status

**Basic Usage**: ``cloudcix.api.Asset.off_test.<method>``

Available Methods
    - ``cloudcix.api.Asset.off_test.list``
        - Returns a list of Off Test transactions
    - ``cloudcix.api.Asset.off_test.create``
        - Allows the User to create a record of an Asset that have
          finished testing and can be made rentable again
    - ``cloudcix.api.Asset.off_test.read``
        - Allows the User to get details about an Off Test transaction

Rent
^^^^
This service allows the Users to manage rentable Assets and assign them to
customers

The Asset must be set up as rentable in order to use this method

The Asset must also be available for rent, and not being tested or rented to
another customer

**Basic Usage**: ``cloudcix.api.Asset.rent.<method>``

Available Methods
    - ``cloudcix.api.Asset.rent.list``
        - Returns a list of Rent transactions
    - ``cloudcix.api.Asset.rent.create``
        - Allows the User to create a record of an Asset being
          rented to a customer
    - ``cloudcix.api.Asset.rent.read``
        - Allows the User to get details about a Rent transaction
    - ``cloudcix.api.Asset.rent.update``
        - Allows the User to update some details about a Rent
          transaction
        - The details can only be changed if at least one of the
          associated Assets is still on rent.
