The Scheduler application allows the User to define tasks for duplicating
existing transactions. A task contains information regarding when and how
often it should be repeated. This can be used for monthly invoicing for
example. Scheduler on its own does not create the new transactions and needs
other software to read and execute the tasks from the Scheduler API. CloudCIX
uses its own software for this called Routine which relies on Celery for
creating transactions on a schedule.

**Basic Usage**: ``cloudcix.api.Scheduler.<service>.<method>``

Services
--------

Task
^^^^
The Task service allows Users to manage their recurring transactions.

A Task is a recurring transaction that will run from time to time according to
a set of rules defined by the User.

**Basic Usage**: ``cloudcix.api.Scheduler.task.<method>``

Available Methods
    - ``cloudcix.api.Scheduler.task.list``
        - This method returns a list of Tasks and their details
    - ``cloudcix.api.Scheduler.task.create``
        - This method allows the User to create a new Task
    - ``cloudcix.api.Scheduler.task.read``
        - This method returns a Task and its details
    - ``cloudcix.api.Scheduler.task.update``
        - This method allows the User to update a Task

Supported Transactions
    - Account Sale Invoices
        - cloudcix.api.Financial.account_sale_invoice
    - Warrantor Tickets
        - cloudcix.api.Support.ticket
        - transaction_type_id=40000


Task Log
^^^^^^^^
The TaskLog service allows the User to get all the details about processed
recurring transactions

Every time a recurring task is processed, a log is created.

The Log contains if the transaction was successful or failed, along with
details of why it failed

**Basic Usage**: ``cloudcix.api.Scheduler.task_log.<method>``

Available Methods
    - ``cloudcix.api.Scheduler.task_log.list``
        - This method allows the User to get a list of logs for a
          specific Task.