The IAAS application provides services that allow for interaction with infrastructure for purposes such as black/whitelisting IP addresses, adding DNS entries, and more.

**Basic Usage**: ``cloudcix.api.IAAS.<service>.<method>``

Services
--------

Aggregated Blacklist
^^^^^^^^^^^^^^^^^^^^
Provides information about all CIDRs that are currently marked as malicious and are routed into a blackhole

Aggregated Blacklist = (CIDRs from external sources + CIDRs from CIX Blacklist service) - CIDRs from CIX Whitelist service.

This list is updated every hour by CIX and is provided to customers as a read-only searchable list of CIDRs.

.. note:: Both the ``create`` and ``delete`` methods do not announce the new configuration to the network devices. This is done separately to the creation or deletion of CIDRs.

**Basic Usage**: ``cloudcix.api.IAAS.aggregated_blacklist.<method>``

Available Methods
    - ``cloudcix.api.IAAS.aggregated_blacklist.list``
        - Returns a list of CIDRs that were identified as suspicious or having malicious activities.

Allocation
^^^^^^^^^^
An Allocation is an IP address range that was assigned to an ASN by an RIR such as RIPE.

Allocations can be freely managed by the Member that owns a particular ASN.

.. note:: Only Users in the CIX Member are able to create new Allocations

**Basic Usage**: ``cloudcix.api.IAAS.allocation.<method>``

Available Methods
    - ``cloudcix.api.IAAS.allocation.list``
        - This method lists all Allocations that are associated with the Member of the User calling the method
    - ``cloudcix.api.IAAS.allocation.create``
        - This method creates a new Allocation for a specified Member.
        - This method can only be run by an Administrator
    - ``cloudcix.api.IAAS.allocation.read``
        - This method allows the User to get the information of a given Allocation that belongs to their Member
    - ``cloudcix.api.IAAS.allocation.update``
        - This method allows the User to update the details of a given Allocation that belongs to their Member
        - This method can only be run by an Administrator
    - ``cloudcix.api.IAAS.allocation.delete``
        - This method allows the User to delete a given Allocation that belongs to their Member
        - An Allocation can only be deleted when it is empty
        - This method can only be run by an Administrator

ASN
^^^
Autonomous System Numbers (ASNs) are assigned in blocks by the Internet Assigned Numbers Authority (IANA) to Regional Internet Registries (RIRs).

The appropriate RIR then assigns ASNs to entities within its designated area from the block assigned to them by the IANA.

ASNs can be assigned to a CloudCIX Member who then becomes the owner of the ASN and is granted the ability to manage its contents.

.. note:: While the ASN service provides a full set of CRUDL methods, Create, Update and Delete can only be used by Users within the CIX Member. Please contact support if you need to run one of these methods

**Basic Usage**: ``cloudcix.api.IAAS.asn.<method>``

Available Methods
    - ``cloudcix.api.IAAS.asn.list``
        - This method returns a list of all ASNs that belong to the User's Member
    - ``cloudcix.api.IAAS.asn.create``
        - This method allows a User to create an ASN belonging to a specified Member
        - This method can only be run by CIX Users
    - ``cloudcix.api.IAAS.asn.read``
        - This method allows a User to read the details of a particular ASN belonging to their Member
    - ``cloudcix.api.IAAS.asn.update``
        - This method allows the User to update the details of a specified ASN
        - This method can only be run by CIX Users
    - ``cloudcix.api.IAAS.asn.delete``
        - This method allows the User to delete a specified ASN
        - ASNs can only be deleted when they are empty
        - This method can only be run by CIX Users

Domain
^^^^^^
Any CloudCIX Member is able to create a Domain and manage its DNS records through the API.

CIX uses the Rage4 DNS Service to propogate DNS records to DNS servers.

.. note:: In order to use DNS records set up through this service, please set your domain's nameservers to ``ns1.r4ns.com`` and ``ns2.r4ns.com``

**Basic Usage**: ``cloudcix.api.IAAS.domain.<method>``

Available Methods
    - ``cloudcix.api.IAAS.domain.list``
        - This method allows the User to retrieve a list of Domains owned by its Member
    - ``cloudcix.api.IAAS.domain.create``
        - This method allows the User to create a new Domain record
        - This record is stored locally and also announced to the Rage4 DNS service
    - ``cloudcix.api.IAAS.domain.read``
        - This method allows the User to read the details of a specific Domain record that is owned by its Member
    - ``cloudcix.api.IAAS.domain.update``
        - This method allows the User to update the details of a specific Domain record owned by its Member
        - This update is reflected both locally and on the Rage4 service
    - ``cloudcix.api.IAAS.domain.delete``
        - This method allows the User to delete a specific Domain record from both the IAAS Application and the Rage4 service
IKE
^^^^
This service provides access to a list of IKE security options that we can currently provide for VPNs

**Basic Usage**: ``cloudcix.api.IAAS.ike.<method>``

Available Methods
    - ``cloudcix.api.IAAS.ike.list``
        - This method allows the User to retrieve a list of supported IKEs
    - ``cloudcix.api.IAAS.ike.read``
        - This method allows the User to get the details of a specific IKE

Image
^^^^^
This service provides access to a list of Images or Operating Systems that we can currently provide in deployed VMs

**Basic Usage**: ``cloudcix.api.IAAS.image.<method>``

Available Methods
    - ``cloudcix.api.IAAS.image.list``
        - This method allows the User to retrieve a list of supported Images
    - ``cloudcix.api.IAAS.image.read``
        - This method allows the User to get the details of a specific Image

IP Address
^^^^^^^^^^
CloudCIX allows its Users to organise IP Addresses by creating a clean structure of ``ASN > Allocation > Subnet > IPAddress``.

Additionally, IP Addresses are used to organise Reverse DNS records.

An IP Address can only be managed by the Member who owns the Subnet that contains it.

**Basic Usage**: ``cloudcix.api.IAAS.ipaddress.<method>``

Available Methods
    - ``cloudcix.api.IAAS.ipaddress.list``
        - This method allows the User to retrieve a list of IP Addresses belonging to their Member
    - ``cloudcix.api.IAAS.ipaddress.create``
        - This method allows the User to create a new IP Address for their Member
    - ``cloudcix.api.IAAS.ipaddress.read``
        - This method allows the User to retrieve the details of a specific IP Address record
    - ``cloudcix.api.IAAS.ipaddress.update``
        - This method allows the User to update the details of a given IP Address record
    - ``cloudcix.api.IAAS.ipaddress.delete``
        - This method allows the User to delete an IP Address record from the IAAS database

IP Validator
^^^^^^^^^^^^
A utility service that can validate any number of address ranges and/or ip addresses.

It provides various details about the supplied parameters.

**Basic Usage**: ``cloudcix.api.IAAS.ip_validator.<method>``

Available Methods
    - ``cloudcix.api.IAAS.ip_validator.list``
        - Given ``addressRanges`` and/or ``ipAddresses``, this method will validate all of the supplied information.
        - Multiple ``addressRanges`` and ``ipAddresses`` should be comma separated; e.g. ``ipAddresses=192.168.0.2,192.168.0.3,192.168.0.3``
        - If both the ``addressRanges`` and ``ipAddresses`` parameters are passed, this method will also check to make sure that each ``ipAddress`` belongs to at least one of the supplied ``addressRanges``
        - If none of the passed parameters are valid, the method will return HTTP 400 - Bad Request
        - If one or more parameters are valid, the method will respond with HTTP 200 - Success
        - Each individual ``ipAddress`` and ``addressRange`` are returned with a ``valid`` flag, stating if they were valid or not.

IpSec
^^^^^
This service provides access to a list of IpSec security options that we can currently provide for VPNs

**Basic Usage**: ``cloudcix.api.IAAS.ipsec.<method>``

Available Methods
    - ``cloudcix.api.IAAS.ipsec.list``
        - This method allows the User to retrieve a list of supported IpSecs
    - ``cloudcix.api.IAAS.ipsec.read``
        - This method allows the User to get the details of a specific IpSec

Record
^^^^^^
The Record service is used to manage Forward DNS entries that are tied to Domains.

Records for a particular Domain can only be managed by the Member that owns that Domain.

**Record Types**

+-------------+----+
| Record Type | ID |
+=============+====+
| NS          | 1  |
+-------------+----+
| A           | 2  |
+-------------+----+
| AAAA        | 3  |
+-------------+----+
| CNAME       | 4  |
+-------------+----+
| MX          | 5  |
+-------------+----+
| TXT         | 6  |
+-------------+----+
| SRV         | 7  |
+-------------+----+
| SPF         | 9  |
+-------------+----+
| SSHFP       | 10 |
+-------------+----+
| LOC         | 11 |
+-------------+----+
| NAPTR       | 12 |
+-------------+----+

**Basic Usage**: ``cloudcix.api.IAAS.record.<method>``

Available Methods
    - ``cloudcix.api.IAAS.record.list``
        - This method allows the User to list all Records belonging to a Domain
    - ``cloudcix.api.IAAS.record.create``
        - This method allows the User to create a new Record for a Domain
        - This new Record is saved locally and announce to the Rage4 service
        - The name and content of the Record vary depending on type (see Record Types table above)
        - Depending on the type, parameters are checked against the Domain name and the IP Addresses owned by the User's Member
    - ``cloudcix.api.IAAS.record.read``
        - This method allows the User to retrieve the details of a single Record
    - ``cloudcix.api.IAAS.record.update``
        - This method allows the User to update the details of a specific Record instance
        - Updates are stored locally and announced to the Rage4 service
    - ``cloudcix.api.IAAS.record.delete``
        - This method allows the User to delete a Record
        - Records are deleted locally and from the Rage4 service

PTR Record
^^^^^^^^^^
The PTR Record service is used to manage PTR type DNS Records, also known as Reverse DNS records.

The User is required to provide an IPAddress that the Record will target, and the content that should be stored with the Record.

The service will select the correct reverse domain correctly based on the IP Address and will automatically populate the name field of the record which will be the reversed IP Address.

**Basic Usage**: ``cloudcix.api.IAAS.recordptr.<method>``

Available Methods
    - ``cloudcix.api.IAAS.recordptr.list``
        - This method allows the User to retrieve a list of PTR Records belonging to their Member
    - ``cloudcix.api.IAAS.recordptr.create``
        - This method allows the User to create a PTR Record
        - The Record will be created both locally and on the Rage4 service
        - The User's Member must own the supplied IP Address for the method to be successful
    - ``cloudcix.api.IAAS.recordptr.read``
        - Thie method allows the User to read the details of a specified PTR Record
    - ``cloudcix.api.IAAS.recordptr.update``
        - This method allows the User to update the details of a specified PTR Record
        - The Record will be updated both locally and on the Rage4 service
    - ``cloudcix.api.IAAS.recordptr.delete``
        - This method allows the User to delete a specified PTR Record
        - The Record will be deleted both locally and on the Rage4 service

Subnet
^^^^^^
The IAAS Application allows for the modelling of a one level network setup, and for the storage of information about subnets and machines located at specific IP Addresses.

Subnets can be created by ASN owners and managed by either ASN owners or their clients.

Once a Subnet is created for a customer of the ASN owner, both the Customer and the ASN Owner can manage it.

**Basic Usage**: ``cloudcix.api.IAAS.subnet.<method>``

Available Methods
    - ``cloudcix.api.IAAS.subnet.list``
        - This method allows the User to list all the Subnets associated with a particular Member
    - ``cloudcix.api.IAAS.subnet.create``
        - This method allows the User to create a new Subnet for a particular Member
        - Only administrators can use this method
    - ``cloudcix.api.IAAS.subnet.read``
        - This method allows the User to retrieve the information of a particular Subnet
    - ``cloudcix.api.IAAS.subnet.update``
        - This method allows the User to update the details of a given Subnet
    - ``cloudcix.api.IAAS.subnet.delete``
        - This method allows the User to delete a Subnet from the list of a Member's Subnets
        - A Subnet can only be deleted if all its IP Addresses have already been deleted
